{"version":3,"sources":["ValidatorOrderSpec.js"],"names":["expect","chai","use","chaiHttp","describe","ordersValidator","beforeEach","done","OrderValidator","it","testQuantity","passing","to","equal","errMessage","undefined","testTotalPrice","resetValid","orders","userId","foodItems","totalPrice","status","testForEmptyStringInput","quantity"],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;IAKEA,M,GACEC,c,CADFD,M;;;AAGFC,eAAKC,GAAL,CAASC,kBAAT;;AAEAC,SAAS,kBAAT,EAA6B,YAAM;AACjC,MAAIC,wBAAJ;AACAC,aAAW,UAACC,IAAD,EAAU;AACnBF,sBAAkB,IAAIG,8BAAJ,EAAlB;AACAD;AACD,GAHD;AAIAE,KAAG,gDAAH,EAAqD,UAACF,IAAD,EAAU;AAC7DF,oBAAgBK,YAAhB,CAA6B,EAA7B;AACAV,WAAOK,gBAAgBM,OAAvB,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC,IAAzC;AACAb,WAAOK,gBAAgBS,UAAvB,EAAmCF,EAAnC,CAAsCC,KAAtC,CAA4CE,SAA5C;AACAV,oBAAgBK,YAAhB,CAA6B,MAA7B;AACAV,WAAOK,gBAAgBM,OAAvB,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC,KAAzC;AACAb,WAAOK,gBAAgBS,UAAvB,EAAmCF,EAAnC,CAAsCC,KAAtC,CAA4C,0DAA5C;AACAN;AACD,GARD;;AAUAE,KAAG,kDAAH,EAAuD,UAACF,IAAD,EAAU;AAC/DF,oBAAgBW,cAAhB,CAA+B,IAA/B;AACAhB,WAAOK,gBAAgBM,OAAvB,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC,IAAzC;AACAb,WAAOK,gBAAgBS,UAAvB,EAAmCF,EAAnC,CAAsCC,KAAtC,CAA4CE,SAA5C;AACAV,oBAAgBW,cAAhB,CAA+B,MAA/B;AACAhB,WAAOK,gBAAgBM,OAAvB,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC,KAAzC;AACAb,WAAOK,gBAAgBS,UAAvB,EAAmCF,EAAnC,CAAsCC,KAAtC,CAA4C,sDAA5C;AACAN;AACD,GARD;AASAE,KAAG,8CAAH,EAAmD,UAACF,IAAD,EAAU;AAC3DF,oBAAgBY,UAAhB;AACAjB,WAAOK,gBAAgBM,OAAvB,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC,IAAzC;AACAN;AACD,GAJD;AAKAE,KAAG,2DAAH,EAAgE,UAACF,IAAD,EAAU;AACxE,QAAMW,SAAS;AACbC,cAAQ,CADK;AAEbC,iBAAW,EAFE;AAGbC,kBAAY,IAHC;AAIbC,cAAQ;AAJK,KAAf;AAMAjB,oBAAgBkB,uBAAhB,CAAwCL,MAAxC;AACAlB,WAAOK,gBAAgBS,UAAvB,EAAmCF,EAAnC,CAAsCC,KAAtC,CAA4CE,SAA5C;AACAf,WAAOK,gBAAgBM,OAAvB,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC,IAAzC;AACAR,oBAAgBkB,uBAAhB,CAAwC;AACtCC,gBAAU;AAD4B,KAAxC;AAGAxB,WAAOK,gBAAgBM,OAAvB,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC,KAAzC;AACAb,WAAOK,gBAAgBS,UAAvB,EAAmCF,EAAnC,CAAsCC,KAAtC,CAA4C,wBAA5C;AACAN;AACD,GAhBD;AAiBD,CA/CD","file":"ValidatorOrderSpec.js","sourceRoot":"/home/dubby/Documents/Tasks/fast-food-fast/Fast-Food-Fast/Api/tests","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\n\nimport {\n  OrderValidator\n} from '../Helpers/ValidateOrders';\n\nconst {\n  expect\n} = chai;\n\nchai.use(chaiHttp);\n\ndescribe('Validate  orders', () => {\n  let ordersValidator;\n  beforeEach((done) => {\n    ordersValidator = new OrderValidator();\n    done();\n  });\n  it('should validate the this.testQuantity function', (done) => {\n    ordersValidator.testQuantity(10);\n    expect(ordersValidator.passing).to.equal(true);\n    expect(ordersValidator.errMessage).to.equal(undefined);\n    ordersValidator.testQuantity('4000');\n    expect(ordersValidator.passing).to.equal(false);\n    expect(ordersValidator.errMessage).to.equal('Quantity must only contain numbers and must not be empty');\n    done();\n  });\n\n  it('should validate the this.testTotalPrice function', (done) => {\n    ordersValidator.testTotalPrice(4000);\n    expect(ordersValidator.passing).to.equal(true);\n    expect(ordersValidator.errMessage).to.equal(undefined);\n    ordersValidator.testTotalPrice('4000');\n    expect(ordersValidator.passing).to.equal(false);\n    expect(ordersValidator.errMessage).to.equal('Price must only contain digits and must not be empty');\n    done();\n  });\n  it('should validate the this.resetValid function', (done) => {\n    ordersValidator.resetValid();\n    expect(ordersValidator.passing).to.equal(true);\n    done();\n  });\n  it('should validate the this.testForEmptyStringInput function', (done) => {\n    const orders = {\n      userId: 3,\n      foodItems: [],\n      totalPrice: 4000,\n      status: 'Pending'\n    };\n    ordersValidator.testForEmptyStringInput(orders);\n    expect(ordersValidator.errMessage).to.equal(undefined);\n    expect(ordersValidator.passing).to.equal(true);\n    ordersValidator.testForEmptyStringInput({\n      quantity: ''\n    });\n    expect(ordersValidator.passing).to.equal(false);\n    expect(ordersValidator.errMessage).to.equal('Enter valid input data');\n    done();\n  });\n});"]}