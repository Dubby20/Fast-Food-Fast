{
  "swagger": "2.0",
  "info": {
    "description": "Fast-Food-Fast is a food delivery service app for a restaurant[Limelight](https://dubby20.github.io/Fast-Food-Fast/)",
    "version": "1.0.0",
    "title": "Fast-Food-Fast",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "rosedubby@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "https://limelight-fastfood.herokuapp.com/",
  "basePath": "/api/v1",
  "tags": [{
      "name": "user",
      "description": "Creating an account as a user",
      "externalDocs": {
        "description": "User registration and login",
        "url": "https://limelight-fastfood.herokuapp.com/"
      }
    },
    {
      "name": "orders",
      "description": "Everything about making an order",
      "externalDocs": {
        "description": "Find out more about placing an order",
        "url": "https://limelight-fastfood.herokuapp.com/"
      }
    },
    {
      "name": "menu",
      "description": "Details of the food menu",
      "externalDocs": {
        "description": "Find out more about the food menu",
        "url": "https://limelight-fastfood.herokuapp.com/"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user",
        "description": "Registers a user into the application",
        "operationId": "SignupUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "signup",
          "description": "Registers a user",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UserSignup"
          }
        }],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "409": {
            "description": "Email already exists"
          }
        },

        "/auth/login": {
          "post": {
            "tags": [
              "user"
            ],
            "summary": "Login a user",
            "description": "Logs user into the application",
            "operationId": "LoginUser",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "application/json"
            ],
            "parameters": [{
              "name": "email",
              "in": "query",
              "description": "The user email",
              "type": "string",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserLogin"
              }
            }],
            "responses": {
              "200": {
                "description": "Successfully signed in"
              },
              "409": {
                "description": "Invalid login details. Email or password is wrong"
              }
            }


          }
        },
        "/orders": {
          "post": {
            "tags": [
              "orders"
            ],
            "summary": "Place an order",
            "description": "User can place an order for food",
            "operationId": "PlaceOrder",
            "produces": [
              "application/json"
            ],
            "parameters": [{
              "name": "order",
              "in": "body",
              "description": "The food menu a user want to order",
              "required": true,
              "type": "object",
              "schema": {
                "$ref": "#/definitions/UserOrder"
              }
            }],
            "responses": {
              "201": {
                "description": "Order placed successfully",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                }
              }
            }
          },
          "get": {
            "tags": [
              "orders"
            ],
            "summary": "Get all orders",
            "description": "Get all users orders",
            "operationId": "GetOrder",
            "produces": [
              "application/json"
            ],
            "parameters": [{
              "name": "order",
              "in": "body",
              "description": "All users order",
              "required": true,
              "type": "object",
              "schema": {
                "$ref": "#/definitions/UserOrders"
              }
            }],
            "responses": {
              "200": {
                "description": "All orders was Successful",
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/definitions/Orders"
                  }
                }
              },
              "404": {
                "description": "No order yet"
              }
            }
          }
        },
        "/users/{userId}/orders": {
          "get": {
            "tags": [
              "orders"
            ],
            "summary": "Finds user order history",
            "description": "The order history of a particlar user",
            "operationId": "findUserOrderHistory",
            "produces": [
              "application/json"
            ],
            "parameters": [{
              "name": "userId",
              "in": "path",
              "description": "The Id of the user",
              "required": true,
              "type": "integer"
            }],
            "responses": {
              "200": {
                "description": "Successful",
                "schema": {
                  "type": "integer",
                  "items": {
                    "$ref": "#/definitions/Order/4"
                  }
                }
              },
              "404": {
                "description": "User has no order history"
              }
            }
          }
        },
        "/orders/{orderId}": {
          "get": {
            "tags": [
              "orders"
            ],
            "summary": "Find order by ID",
            "description": "Returns a single order",
            "operationId": "getOrderById",
            "produces": [
              "application/json"
            ],
            "parameters": [{
              "name": "orderId",
              "in": "path",
              "description": "ID of order to return",
              "required": true,
              "type": "integer",
              "format": "int64"
            }],
            "responses": {
              "200": {
                "description": "Get a specific order was successful",
                "schema": {
                  "$ref": "#/definitions/OrderId"
                }
              },
              "400": {
                "description": "The given order id is not a number"
              },
              "404": {
                "description": "Order id not found"
              }
            }
          },
          "put": {
            "tags": [
              "orders"
            ],
            "summary": "Updates the status of an order",
            "description": "The order status could either be New, Processing, Cancelled or Complete",
            "operationId": "updateOrderStatus",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "application/json"
            ],
            "parameters": [{
                "name": "orderId",
                "in": "path",
                "description": "ID of the order that needs to be updated",
                "required": true,
                "type": "integer",
                "format": "int64"
              },
              {
                "name": "status",
                "in": "query",
                "description": "Updated status of the order",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Status updated successfully"
              },
              "400": {
                "description": "Invalid Status"
              },

              "404": {
                "description": "The status with the given order id was not found"
              }
            }
          },

          "/menu": {
            "post": {
              "tags": [
                "menu"
              ],
              "summary": "Post menu",
              "description": "Add meal to the menu",
              "operationId": "postMenu",
              "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "parameters": [{
                "name": "menu",
                "in": "body",
                "description": "Add meal",
                "required": true,
                "type": "object",
                "schema": {
                  "$ref": "#/definitions/postMenu"
                }
              }],
              "responses": {
                "201": {
                  "description": "Menu added successfully",
                  "schema": {
                    "$ref": "#/definitions/postMenu"
                  }
                }
              }
            },

            "get": {
              "tags": [
                "menu"
              ],
              "summary": "Get menu",
              "description": "Get all available menu",
              "operationId": "getMenu",
              "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "responses": {
                "200": {
                  "description": "Successful",
                  "schema": {
                    "$ref": "#/definitions/getMenu"
                  }
                },
                "404": {
                  "description": "No available menu yet"
                }
              }
            }

          },

          "securityDefinitions": {
            "fast-food-fast-_auth": {
              "type": "oauth2",
              "authorizationUrl": "https://limelight-fastfood.herokuapp.com/api/v1/auth/login"
            },
            "api_key": {
              "type": "apiKey",
              "name": "api_key",
              "in": "header"
            }
          },
          "definitions": {
            "xml": {
              "name": "orders"
            }
          },
            "Order": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "userId": {
                  "type": "integer",
                  "format": "int64"
                },
                "totalPrice": {
                  "type": "numeric",
                  "format": "int32"
                },
                "phoneNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "address": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "description": "Order Status",
                  "enum": [
                    "new",
                    "processing",
                    "cancelled",
                    "complete"
                  ]
                },
                "created_at": {
                  "type": "date",
                  "format": "date-time"
                }
              },
              "foodItems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "foodName": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "integer"
                    },
                    "price": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "xml": {
              "name": "user"
            }
          },
            "User": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "userStatus": {
                  "type": "integer",
                  "format": "int32",
                  "description": "User Status"
                }
              },
              "xml": {
                "name": "User"
              }
            },
            "Tag": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string"
                }
              },
              "xml": {
                "name": "menu"
              }
            },
            "Menu": {
              "type": "object",
              "required": [
                "foodName",
                "foodImage",
                "description",
                "price"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "example": "Fried Rice"
                },
                "photoUrls": {
                  "type": "string",
                  "xml": {
                    "name": "photoUrl",
                    "wrapped": true
                  },
                  "price": {
                    "type": "numeric"
                  }
                },
                "tags": {
                  "type": "array",
                  "xml": {
                    "name": "tag",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                },
                "status": {
                  "type": "string",
                  "description": "order status",
                  "enum": [
                    "new",
                    "processing",
                    "cancelled",
                    "complete"
                  ]
                }
              }
            },
            "ApiResponse": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "type": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "externalDocs": {
            "description": "Find out more about Fast-Food-Fast",
            "url": "https://limelight-fastfood.herokuapp.com/api/v1/auth/login"
          }
        }
      }
    }